pipeline {

    agent {
        dockerfile {
        filename 'docker/Dockerfile'
        }
    }
    stages {
        stage("build") {
            when {
                expression {
                    BRANCH_NAME == 'master'
                }
            }
            steps {
                sh '''source /opt/build.sh
                '''
            }
        }
        stage("test copying files") {
            steps {
                def customImage = docker.build("docker:${env.BUILD_ID}", "-f ./docker/Dockerfile .")
                customImage.inside('-u root') {
                sh 'touch /app/test.html && ls' 
            }
        }

    }
}